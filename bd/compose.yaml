# Use postgres/example user/password credentials
services:
  postgres:
    container_name: postgres_container  # Added container name
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres  # Persisting data volume
    ports:
      - "5432:5432"  # Mapping port 5432 of container to host
    networks:
      - postgres  # Connecting to postgres network
    restart: unless-stopped  # Restart policy

  pgadmin:
    container_name: pgadmin_container  # Added container name
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'  # Disabling server mode
    volumes:
      - pgadmin:/var/lib/pgadmin  # Persisting pgadmin data volume
    ports:
      - "${PGADMIN_PORT:-5050}:80"  # Mapping port (default 5050) to host port 80
    networks:
      - postgres  # Connecting to postgres network
    restart: unless-stopped  # Restart policy
    
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
      
networks:
  postgres:
    driver: bridge  # Bridge network for container communication

volumes:
  postgres:  # Empty volume definition for postgres data
  pgadmin:  # Empty volume definition for pgadmin data

